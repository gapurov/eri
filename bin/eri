#!/usr/bin/env node

"use strict";

const {realpathSync, statSync} = require("fs");
const ERI_ROOT = realpathSync(`${__dirname}/../`);

var {exec, execSync} = require("child_process");

const IS_YARN_EXISTS = (function() {
  try {
    execSync("which yarn");
    return true;
  } catch (err) {
    return false;
  }
})();

process.title = "eri";
process.chdir(ERI_ROOT);

// Install dependencies if not exists
try {
  statSync(`${ERI_ROOT}/node_modules`);
} catch (err) {
  if (err.code !== "ENOENT") {
    throw err;
  }

  execSync(IS_YARN_EXISTS === true ? "yarn" : "npm i");
}

const commander = require("commander");
const pify = require("pify");
const ora = require("ora")();

exec = pify(exec);

function onFulfilled() {
  ora.text = "Done without errors.";
  ora.succeed();
  process.exit(0);
}

function onRejected(err) {
  ora.text = String(err);
  ora.fail();
  console.log(err.stack);
  process.exit(1);
}

function actionSetup(cmd) {
  ora.color = "cyan";
  ora.text = "Build backend app...";
  ora.start();

  exec(`${ERI_ROOT}/node_modules/.bin/cake make`)
    .then(() => {
      ora.stop();
      return require(`${ERI_ROOT}/setup/setup`)(cmd);
    })
    .then(onFulfilled, onRejected);
}

function actionRun() {
  try {
    require(`${ERI_ROOT}/core/server`);
  } catch (err) {
    onRejected(err);
  }
}

commander
  .version(require(`${ERI_ROOT}/package.json`).version)
  .usage("<command> [options]");

commander
  .command("setup")
  .alias("s")
  .description("Run installer script")
  .option("--silent, -s", "Run setup script in silent mode")
  .action(actionSetup);

commander
  .command("run")
  .alias("r")
  .description("Run your Eri app instance")
  .action(actionRun);

commander.parse(process.argv);

process.on("SIGINT", () => process.exit(0));
